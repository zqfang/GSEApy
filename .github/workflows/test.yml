# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: GSEApy

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # see supported version syntax in actions/setup-python. e.g. ">=3.10", "3.x"(latest)
        python-version: ["3.x"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        python -m pip install wheel
        python -m pip install lxml
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8 flake8-black flake8-isort
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82,BLK100,I001,I002,I003,I004,I005 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    # - name: Test with covarege
    #   run: |
    #     cd ${GITHUB_WORKSPACE}
    #     pip install coverage
    #     pip install coveralls
    #     python setup.py install
    #     # coverage run setup.py test
    - name: Test with pytest
      run: |
        cd ${GITHUB_WORKSPACE}
        pip install pytest
        pip install pytest-cov
        pip install -e .
        pytest

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.x'
      - uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Install cibuildwheel
        run: |
          python -m pip install cibuildwheel twine wheel
      - name: Build wheels
        run: |
          python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BEFORE_ALL_LINUX: >
            yum install libatomic -y &&
            curl https://sh.rustup.rs -sSf | sh -s -- -y
          CIBW_ENVIRONMENT_LINUX: 'PATH="$PATH:$HOME/.cargo/bin"'
          # CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=10.9
          CIBW_MANYLINUX_X86_64_IMAGE: quay.io/pypa/manylinux2014_x86_64:latest         
          # rust is not available for musl linux on i686. see https://github.com/rust-lang/rustup/issues/2984
          CIBW_MANYLINUX_I686_IMAGE: quay.io/pypa/manylinux2014_i686:latest
          CIBW_SKIP: cp36-* cp37-* pp* *win32 *musl*
          CIBW_PROJECT_REQUIRES_PYTHON: ">=3.8"
          CIBW_PRERELEASE_PYTHONS: True

